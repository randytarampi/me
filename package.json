{
  "name": "me",
  "author": {
    "name": "Randy Tarampi",
    "email": "rt@randytarampi.ca",
    "url": "https://www.randytarampi.ca"
  },
  "private": true,
  "devDependencies": {
    "@babel/cli": "latest",
    "@babel/core": "latest",
    "@babel/plugin-proposal-class-properties": "latest",
    "@babel/plugin-proposal-object-rest-spread": "latest",
    "@babel/plugin-transform-property-literals": "latest",
    "@babel/polyfill": "latest",
    "@babel/preset-env": "latest",
    "@babel/preset-react": "latest",
    "@babel/register": "latest",
    "babel-eslint": "^10.0.1",
    "babel-loader": "next",
    "babel-plugin-istanbul": "next",
    "babel-plugin-lodash": "^3.3.4",
    "babel-plugin-minify-replace": "^0.5.0",
    "chai": "^4.2.0",
    "chai-enzyme": "^1.0.0-beta.1",
    "cheerio": "^1.0.0-rc.2",
    "chokidar": "^2.0.4",
    "commander": "^2.19.0",
    "config": "^3.0.1",
    "connect-history-api-fallback": "^1.6.0",
    "copy-webpack-plugin": "^4.6.0",
    "coveralls": "^3.0.2",
    "css-loader": "^2.1.0",
    "del": "^3.0.0",
    "enzyme": "^3.8.0",
    "enzyme-adapter-react-16": "^1.7.1",
    "eslint-plugin-import": "^2.14.0",
    "eslint-plugin-react": "^7.12.3",
    "expose-loader": "^0.7.5",
    "express": "^4.16.4",
    "file-loader": "3.0.1",
    "gulp": "^4.0.0",
    "gulp-autoprefixer": "^6.0.0",
    "gulp-clean-css": "^4.0.0",
    "gulp-concat": "^2.6.1",
    "gulp-eslint": "^5.0.0",
    "gulp-if": "^2.0.2",
    "gulp-mocha": "^6.0.0",
    "gulp-pug": "^4.0.1",
    "gulp-pug-linter": "^1.1.0",
    "gulp-sass": "^4.0.2",
    "gulp-sass-lint": "^1.4.0",
    "gulp-sourcemaps": "^2.6.4",
    "habitat": "^3.1.2",
    "history": "^4.7.2",
    "html-webpack-harddisk-plugin": "^1.0.1",
    "html-webpack-plugin": "^4.0.0-beta.5",
    "immutable": "github:randytarampi/immutable-js#me-release",
    "js-yaml": "^3.12.1",
    "jsdom": "^13.1.0",
    "json-stringify-safe": "^5.0.1",
    "koa-compress": "^3.0.0",
    "koa-connect": "^2.0.1",
    "koa-mount": "^4.0.0",
    "koa-static": "^5.0.0",
    "lerna": "^3.10.2",
    "lodash": "^4.17.11",
    "materialize-css": "^0.100.2",
    "mini-css-extract-plugin": "^0.5.0",
    "mocha": "^5.2.0",
    "mock-local-storage": "^1.1.8",
    "nyc": "^13.1.0",
    "optimize-css-assets-webpack-plugin": "^5.0.1",
    "postcss-loader": "^3.0.0",
    "postcss-preset-env": "^6.5.0",
    "proxyquire": "^2.1.0",
    "pug-loader": "^2.4.0",
    "raf": "^3.4.1",
    "react": "^16.7.0",
    "react-dom": "^16.7.0",
    "react-hot-loader": "^4.6.3",
    "react-materialize": "^2.6.0",
    "react-redux": "^5.1.1",
    "react-router": "^4.3.1",
    "react-router-sitemap": "github:randytarampi/react-router-sitemap#me-release",
    "redux": "^4.0.1",
    "redux-mock-store": "^1.5.3",
    "redux-thunk": "^2.3.0",
    "reselect": "^4.0.0",
    "resolve-url-loader": "^3.0.0",
    "sass-loader": "^7.1.0",
    "serverless": "^1.35.1",
    "serverless-api-compression": "^1.0.1",
    "serverless-domain-manager": "^2.6.10",
    "serverless-dynamodb-local": "github:randytarampi/serverless-dynamodb-local#me-release",
    "serverless-offline": "^3.32.1",
    "serverless-plugin-tracing": "^2.0.0",
    "serverless-plugin-warmup": "^4.2.0-rc.1",
    "serverless-secrets": "github:RishitKedia/serverless-secrets#fix-get-parameters-limit-of-10",
    "serverless-webpack": "^5.2.0",
    "sinon": "^7.2.2",
    "svg-path-loader": "^0.0.4",
    "syncpack": "^4.0.0",
    "terser-webpack-plugin": "^1.2.1",
    "uglifyjs-webpack-plugin": "^2.1.1",
    "vinyl-paths": "^2.1.0",
    "webpack": "^4.28.3",
    "webpack-bundle-analyzer": "^3.0.3",
    "webpack-cli": "^3.2.0",
    "webpack-node-externals": "^1.7.2",
    "webpack-sentry-plugin": "^1.16.0",
    "webpack-serve": "^2.0.3",
    "workbox-webpack-plugin": "^3.6.3",
    "ws": "^6.1.2",
    "yargs": "^12.0.5"
  },
  "bugs": {
    "url": "https://github.com/randytarampi/me/issues",
    "email": "bugs@randytarampi.ca"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/randytarampi/me.git"
  },
  "scripts": {
    "clean": "./bin/clean.sh",
    "bootstrap": "./bin/hoist.sh",
    "prepare": "if [ -z \"$IS_PUBLISHING\" ]; then npm run bootstrap; fi;",
    "lock": "npm run lock:generate",
    "lock:generate": "npm install --package-lock-only && npx lerna exec --concurrency $(node -p \"require(\\\"os\\\").cpus().length\") --no-bail -- npm install --package-lock-only;",
    "lock:clean": "rm package-lock.json packages/*/package-lock.json",
    "lock:rebuild": "npm run lock:clean && npm run lock:generate",
    "audit:fix": "npm audit fix && npx lerna exec --concurrency $(node -p \"require(\\\"os\\\").cpus().length\") --no-bail -- npm audit fix",
    "pretest": "NODE_ENV=test lerna run pretest --no-bail --concurrency $(node -p \"require(\\\"os\\\").cpus().length\")",
    "test": "NODE_ENV=test lerna run test --no-bail --concurrency $(node -p \"require(\\\"os\\\").cpus().length\")",
    "cover:actual": "rm -rf .nyc_output/ coverage/ && lerna run cover --no-bail --concurrency $(node -p \"require(\\\"os\\\").cpus().length\")",
    "cover:collect": "mkdir -p .nyc_output/ coverage/ && lerna exec -- \"if [ -d \"./.nyc_output\" ]; then cp -r .nyc_output ../..; fi;\" && nyc report --reporter=lcov",
    "cover": "npm run cover:actual; npm run cover:collect",
    "coveralls": "cat coverage/lcov.info | coveralls",
    "kill": "lerna run kill"
  }
}
